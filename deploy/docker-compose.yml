name: gamebackend
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: game
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 30

  api:
    build: ../services/api
    environment:
      DB_DSN: postgresql+psycopg://postgres:postgres@postgres:5432/game
      API_KEY: dev
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"

  redis:
    image: redis:7
    ports: ["6379:6379"]

  matcher-worker:
    build: ../services/matcher
    env_file: ../.env
    environment:
      DB_DSN: postgresql+psycopg://postgres:postgres@postgres:5432/game
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      REGIONS: EUW,EUNE,NA,CHN,JPN,KR,OCE,BR,LAS,LAN
      MATCH_BETA: "0.1"
      METRICS_PORT: "8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["celery", "-A", "matcher.worker", "worker", "-l", "info"]
    ports:
      - "8001:8001"

  matcher-beat:
    build: ../services/matcher
    env_file: ../.env
    environment:
      DB_DSN: postgresql+psycopg://postgres:postgres@postgres:5432/game
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      REGIONS: EUW,EUNE,NA,CHN,JPN,KR,OCE,BR,LAS,LAN
      MATCH_BETA: "0.1"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["celery", "-A", "matcher.worker", "beat", "-l", "info"]
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - api
      - matcher-worker
volumes:
  pgdata: {}
